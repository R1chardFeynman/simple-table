{"version":3,"sources":["components/Popup.js","components/ActionIcon.js","components/TableHead/ActionsBar.js","components/TableHead/TableHead.js","components/TableBody.js","components/Table.js","App.js","index.js"],"names":["inputStyles","makeStyles","root","marginBottom","dialogActionsStyles","justifyContent","Popup","popupType","type","elementToEdit","open","handleOnClose","handleOnAdd","handleOnEdit","isExtraSmall","initialState","name","color","inputsClasses","dialogActionsClasses","useState","fields","setFields","currentColor","setColor","error","setError","useEffect","resetPopup","handleOnChange","e","fieldType","newState","target","value","Dialog","fullScreen","DialogTitle","edit","add","DialogContent","Box","display","flexDirection","TextField","onChange","label","className","Select","MenuItem","margin","rgb","onChangeComplete","hexWithAlpha","hex","Math","round","a","toString","DialogActions","Button","onClick","submitHandlers","handler","defaultProps","useStyles","padding","ActionIcon","size","handleOnClick","Icon","EditIcon","delete","DeleteIcon","AddIcon","classes","IconButton","fontSize","undefined","ActionsBar","actions","colAmount","borderBottom","TableRow","Array","from","length","v","i","map","TableCell","action","PropTypes","shape","string","func","TableHead","columns","col","align","title","TableBody","data","rowStructure","handleOnDelete","row","el","key","sizeSmall","alignItems","Table","popupInitialState","isOpen","element","setData","popupData","setPopupData","jsonData","localStorage","getItem","parsedData","JSON","parse","setItem","stringify","useMediaQuery","openPopup","handlePopupOnClose","newEl","editedElement","newData","elementToEditIndex","findIndex","filter","App","width","xs","sm","md","lg","border","borderRadius","boxSizing","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c2be29d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Box, Button, makeStyles } from '@material-ui/core';\r\nimport { SketchPicker } from 'react-color';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst inputStyles = makeStyles({\r\n  root: {\r\n    marginBottom: '12px',\r\n  },\r\n});\r\nconst dialogActionsStyles = makeStyles({\r\n  root: {\r\n    justifyContent: 'space-around',\r\n  },\r\n});\r\n\r\nconst Popup = ({\r\n  type: popupType,\r\n  elementToEdit,\r\n  open,\r\n  handleOnClose,\r\n  handleOnAdd,\r\n  handleOnEdit,\r\n  isExtraSmall,\r\n}) => {\r\n  const initialState = {\r\n    name: '',\r\n    type: 'side',\r\n    color: '#ffffff',\r\n  };\r\n\r\n  const inputsClasses = inputStyles();\r\n  const dialogActionsClasses = dialogActionsStyles();\r\n\r\n  const [fields, setFields] = useState(initialState);\r\n  const [currentColor, setColor] = useState('#ffffff');\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (elementToEdit) {\r\n      setFields(elementToEdit);\r\n      setColor(elementToEdit.color);\r\n    }\r\n  }, [elementToEdit]);\r\n\r\n  const titles = {\r\n    edit: 'Edit',\r\n    add: 'Add',\r\n  };\r\n\r\n  const resetPopup = () => {\r\n    setColor('#ffffff');\r\n    setError(false);\r\n    setFields(initialState);\r\n  };\r\n\r\n  const handleOnCancel = () => {\r\n    resetPopup();\r\n    handleOnClose();\r\n  };\r\n  const handleColorOnChange = (color) => {\r\n    setColor(color.rgb);\r\n  };\r\n  const handleColorOnChangeComplete = (color) => {\r\n    // Sadly this colorpicker doesn't support hex with alpha channel\r\n    // so this is a workaround\r\n    const hexWithAlpha = color.hex + Math.round(color.rgb.a * 255).toString(16);\r\n    setFields({\r\n      ...fields,\r\n      color: hexWithAlpha,\r\n    });\r\n  };\r\n  const handleOnChange = (e, fieldType) => {\r\n    const newState = { ...fields };\r\n    newState[fieldType] = e.target.value;\r\n    setFields(newState);\r\n  };\r\n  const handleOnSubmit = () => {\r\n    const submitHandlers = {\r\n      add: handleOnAdd,\r\n      edit: handleOnEdit,\r\n    };\r\n    const validation = () => {\r\n      const { name } = fields;\r\n      if (!name) {\r\n        setError(true);\r\n        return false;\r\n      }\r\n      return true;\r\n    };\r\n\r\n    const isValid = validation();\r\n    if (!isValid) {\r\n      return;\r\n    }\r\n    const handler = submitHandlers[popupType];\r\n    handler(fields);\r\n    handleOnClose();\r\n    resetPopup();\r\n  };\r\n\r\n  return (\r\n    <Dialog fullScreen={isExtraSmall} open={open}>\r\n      <DialogTitle>{titles[popupType]}</DialogTitle>\r\n      <DialogContent>\r\n        <Box display=\"flex\" flexDirection=\"column\">\r\n          <TextField\r\n            onChange={(e) => handleOnChange(e, 'name')}\r\n            value={fields.name}\r\n            error={error}\r\n            label=\"Name\"\r\n            type=\"text\"\r\n            className={inputsClasses.root}\r\n          />\r\n          <Select\r\n            label=\"Type\"\r\n            onChange={(e) => handleOnChange(e, 'type')}\r\n            value={fields.type}\r\n            className={inputsClasses.root}\r\n          >\r\n            <MenuItem value=\"main\">main</MenuItem>\r\n            <MenuItem value=\"side\">side</MenuItem>\r\n          </Select>\r\n          <Box margin=\"8px auto\">\r\n            <SketchPicker\r\n              color={currentColor}\r\n              onChange={handleColorOnChange}\r\n              onChangeComplete={handleColorOnChangeComplete}\r\n            />\r\n          </Box>\r\n          <DialogActions className={dialogActionsClasses.root}>\r\n            <Button onClick={handleOnSubmit}>Submit</Button>\r\n            <Button onClick={handleOnCancel}>Cancel</Button>\r\n          </DialogActions>\r\n        </Box>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nPopup.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  elementToEdit: PropTypes.objectOf(PropTypes.string),\r\n  handleOnAdd: PropTypes.func.isRequired,\r\n  handleOnEdit: PropTypes.func.isRequired,\r\n  handleOnClose: PropTypes.func.isRequired,\r\n  isExtraSmall: PropTypes.bool.isRequired,\r\n};\r\n\r\nPopup.defaultProps = {\r\n  elementToEdit: null,\r\n};\r\n\r\nexport default Popup;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    padding: 4,\r\n  },\r\n});\r\n\r\nconst ActionIcon = ({ type, size, handleOnClick }) => {\r\n  const icons = {\r\n    edit: EditIcon,\r\n    delete: DeleteIcon,\r\n    add: AddIcon,\r\n  };\r\n  const Icon = icons[type];\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <IconButton className={classes.root} onClick={handleOnClick}>\r\n      <Icon fontSize={size} />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nActionIcon.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  size: PropTypes.string,\r\n  handleOnClick: PropTypes.func,\r\n};\r\nActionIcon.defaultProps = {\r\n  size: 'medium',\r\n  handleOnClick: undefined,\r\n};\r\n\r\nexport default ActionIcon;\r\n","import React from 'react';\r\nimport { TableRow, Box, TableCell, makeStyles } from '@material-ui/core';\r\nimport ActionIcon from 'components/ActionIcon';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ActionsBar = ({ actions, colAmount, isExtraSmall }) => {\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      borderBottom: 'none',\r\n      padding: () => `${isExtraSmall ? '16px 8px' : '16px'}`,\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const renderActions = () => {\r\n    return (\r\n      <TableCell className={classes.root}>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\">\r\n          {actions.map((action) => {\r\n            return (\r\n              <ActionIcon\r\n                type={action.type}\r\n                handleOnClick={action.handleOnClick}\r\n              />\r\n            );\r\n          })}\r\n        </Box>\r\n      </TableCell>\r\n    );\r\n  };\r\n\r\n  const renderEmptyCells = () => {\r\n    const mappingArray = Array.from({ length: colAmount - 1 }, (v, i) => i);\r\n    return mappingArray.map(() => {\r\n      return <TableCell className={classes.root} />;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <TableRow>\r\n      {renderEmptyCells()}\r\n      {renderActions()}\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport const TActions = PropTypes.shape([\r\n  {\r\n    type: PropTypes.string,\r\n    handleOnClick: PropTypes.func,\r\n  },\r\n]);\r\n\r\nActionsBar.defaultProps = {\r\n  isExtraSmall: false,\r\n};\r\n\r\nActionsBar.propTypes = {\r\n  actions: TActions.isRequired,\r\n  colAmount: PropTypes.number.isRequired,\r\n  isExtraSmall: PropTypes.bool,\r\n};\r\n\r\nexport default ActionsBar;\r\n","import React from 'react';\r\nimport {\r\n  TableHead as MuiTableHead,\r\n  TableRow,\r\n  TableCell,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport ActionsBar from 'components/TableHead/ActionsBar';\r\nimport { TActions } from './ActionsBar';\r\n\r\nconst TableHead = ({ columns, actions, isExtraSmall }) => {\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      padding: () => `${isExtraSmall ? '16px 8px' : '16px'}`,\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  const renderColumns = () => {\r\n    return columns.map((col) => {\r\n      return (\r\n        <TableCell\r\n          className={classes.root}\r\n          align={col.align}\r\n          padding={col.padding}\r\n        >\r\n          {col.title}\r\n        </TableCell>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <MuiTableHead>\r\n      <ActionsBar\r\n        isExtraSmall={isExtraSmall}\r\n        colAmount={columns.length}\r\n        actions={actions}\r\n      />\r\n      <TableRow>{renderColumns()}</TableRow>\r\n    </MuiTableHead>\r\n  );\r\n};\r\n\r\nconst TColumns = PropTypes.shape([\r\n  {\r\n    title: PropTypes.string,\r\n    align: PropTypes.string,\r\n    padding: PropTypes.string,\r\n  },\r\n]);\r\n\r\nTableHead.defaultProps = {\r\n  isExtraSmall: false,\r\n};\r\n\r\nTableHead.propTypes = {\r\n  columns: TColumns.isRequired,\r\n  actions: TActions.isRequired,\r\n  isExtraSmall: PropTypes.bool,\r\n};\r\n\r\nexport default TableHead;\r\n","import React from 'react';\r\nimport {\r\n  TableBody as MuiTableBody,\r\n  TableCell,\r\n  TableRow,\r\n  Box,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport ActionIcon from 'components/ActionIcon';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TableBody = ({\r\n  data,\r\n  rowStructure,\r\n  handleOnDelete,\r\n  handleOnEdit,\r\n  isExtraSmall,\r\n}) => {\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      padding: () => `${isExtraSmall ? '16px 8px' : '16px'}`,\r\n      '&.MuiTableCell-sizeSmall.MuiTableCell-paddingCheckbox:last-child': {\r\n        padding: () => `${isExtraSmall ? '16px 8px' : '16px'}`,\r\n      },\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n  return (\r\n    <MuiTableBody>\r\n      {data.map((row) => {\r\n        return (\r\n          <TableRow>\r\n            {rowStructure.map((el) => {\r\n              const { key, align, padding } = el;\r\n              return (\r\n                <>\r\n                  <TableCell\r\n                    className={`${classes.root} ${classes.sizeSmall}`}\r\n                    align={align}\r\n                    padding={padding}\r\n                  >\r\n                    {row[key]}\r\n                  </TableCell>\r\n                </>\r\n              );\r\n            })}\r\n            <TableCell\r\n              className={classes.root}\r\n              padding=\"checkbox\"\r\n              size=\"small\"\r\n              align=\"center\"\r\n            >\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                justifyContent=\"flex-end\"\r\n                alignItems=\"center\"\r\n              >\r\n                <ActionIcon\r\n                  type=\"edit\"\r\n                  size=\"small\"\r\n                  handleOnClick={() => handleOnEdit(row)}\r\n                />\r\n                <ActionIcon\r\n                  type=\"delete\"\r\n                  size=\"small\"\r\n                  handleOnClick={() => handleOnDelete(row)}\r\n                />\r\n              </Box>\r\n            </TableCell>\r\n          </TableRow>\r\n        );\r\n      })}\r\n    </MuiTableBody>\r\n  );\r\n};\r\n\r\nTableBody.propTypes = {\r\n  data: PropTypes.shape([\r\n    {\r\n      name: PropTypes.string,\r\n      type: PropTypes.string,\r\n      color: PropTypes.string,\r\n    },\r\n  ]).isRequired,\r\n  rowStructure: PropTypes.shape([\r\n    {\r\n      key: PropTypes.string,\r\n      align: PropTypes.string,\r\n      padding: PropTypes.string,\r\n    },\r\n  ]).isRequired,\r\n  handleOnDelete: PropTypes.func.isRequired,\r\n  handleOnEdit: PropTypes.func.isRequired,\r\n  isExtraSmall: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default TableBody;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Table as MuiTable, useMediaQuery } from '@material-ui/core';\r\nimport Popup from 'components/Popup';\r\nimport TableHead from 'components/TableHead/TableHead';\r\nimport TableBody from 'components/TableBody';\r\n\r\nconst Table = () => {\r\n  const popupInitialState = {\r\n    isOpen: false,\r\n    type: '',\r\n    element: null,\r\n  };\r\n\r\n  const [data, setData] = useState([]);\r\n  const [popupData, setPopupData] = useState(popupInitialState);\r\n\r\n  // Get data from local storage if there's any\r\n  useEffect(() => {\r\n    const jsonData = localStorage.getItem('data');\r\n    if (jsonData) {\r\n      const parsedData = JSON.parse(jsonData);\r\n      setData(parsedData);\r\n    }\r\n  }, []);\r\n  // Write data to local storage at any data change\r\n  useEffect(() => {\r\n    localStorage.setItem('data', JSON.stringify(data));\r\n  }, [data]);\r\n  // Boolean needed for extra small width devices' styles\r\n  const isExtraSmall = useMediaQuery('(max-width: 380px');\r\n\r\n  // === Popup related functions ===\r\n  const resetPopupData = () => {\r\n    setPopupData(popupInitialState);\r\n  };\r\n  const openPopup = (type, element) => {\r\n    setPopupData({\r\n      ...popupData,\r\n      type,\r\n      isOpen: true,\r\n      element: element || null,\r\n    });\r\n  };\r\n  const handlePopupOnClose = resetPopupData;\r\n  const handlePopupOnEdit = (editedElement) => {\r\n    const newData = [...data];\r\n    const elementToEditIndex = newData.findIndex((el) => {\r\n      return el.name === popupData.element.name;\r\n    });\r\n    newData[elementToEditIndex] = editedElement;\r\n    setData(newData);\r\n    handlePopupOnClose();\r\n  };\r\n  const handlePopupOnAdd = (newEl) => {\r\n    setData([...data, newEl]);\r\n  };\r\n  // === END Popup related functions END ===\r\n\r\n  // === Functions related to Add/Edit/Delete actions ===\r\n  const handleOnEdit = (element) => {\r\n    openPopup('edit', element);\r\n  };\r\n  const handleOnAdd = () => {\r\n    openPopup('add');\r\n  };\r\n\r\n  const handleOnDelete = (row) => {\r\n    setData(data.filter((el) => el.name !== row.name));\r\n  };\r\n  // === END Functions related to Add/Edit/Delete actions END ===\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Name',\r\n    },\r\n    {\r\n      title: 'Type',\r\n      align: 'right',\r\n    },\r\n    {\r\n      title: 'Color',\r\n      align: 'right',\r\n    },\r\n    {\r\n      title: 'Actions',\r\n      align: 'center',\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      type: 'add',\r\n      handleOnClick: handleOnAdd,\r\n    },\r\n  ];\r\n\r\n  const rowStructure = [\r\n    {\r\n      key: 'name',\r\n    },\r\n    {\r\n      key: 'type',\r\n      align: 'right',\r\n    },\r\n    {\r\n      key: 'color',\r\n      align: 'right',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <MuiTable>\r\n      <Popup\r\n        elementToEdit={popupData.element}\r\n        handleOnClose={handlePopupOnClose}\r\n        handleOnAdd={handlePopupOnAdd}\r\n        handleOnEdit={handlePopupOnEdit}\r\n        open={popupData.isOpen}\r\n        type={popupData.type}\r\n        isExtraSmall={isExtraSmall}\r\n      />\r\n      <TableHead\r\n        columns={columns}\r\n        actions={actions}\r\n        isExtraSmall={isExtraSmall}\r\n      />\r\n      <TableBody\r\n        isExtraSmall={isExtraSmall}\r\n        data={data}\r\n        rowStructure={rowStructure}\r\n        handleOnEdit={handleOnEdit}\r\n        handleOnDelete={handleOnDelete}\r\n      />\r\n    </MuiTable>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from 'react';\nimport Table from 'components/Table';\nimport { Box } from '@material-ui/core';\n\nfunction App() {\n  return (\n    <div>\n      <Box\n        width={{ xs: '100%', sm: '60%', md: '35%', lg: '30%' }}\n        margin=\"0 auto\"\n        border=\"1px solid rgba(224, 224, 224, 1)\"\n        borderRadius=\"5px\"\n        boxSizing=\"border-box\"\n      >\n        <Table />\n      </Box>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}